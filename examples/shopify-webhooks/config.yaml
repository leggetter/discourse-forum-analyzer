# Discourse Forum Analyzer - Shopify Webhooks Example Configuration
#
# This configuration file is set up to analyze the Shopify Webhooks & Events forum.
# It demonstrates how to configure the tool for collecting and analyzing Discourse forum data.

# ============================================================================
# Discourse API Settings
# ============================================================================
discourse:
  # The base URL of the Discourse forum
  base_url: "https://community.shopify.dev"
  
  # The category to analyze (URL-friendly slug)
  # Find this in the category URL: https://community.shopify.dev/c/webhooks-and-events/18
  category_slug: "webhooks-and-events"
  
  # The numeric category ID
  # Find this in the category URL (the number at the end)
  category_id: 18

# ============================================================================
# Rate Limiting Configuration
# ============================================================================
# Protects against API throttling and respects forum server limits
rate_limiting:
  # Maximum requests per second (1.0 = one request per second)
  # Conservative setting to avoid rate limiting on public APIs
  requests_per_second: 1.0
  
  # Number of retry attempts for failed requests
  max_retries: 3
  
  # Exponential backoff multiplier
  # Wait time = backoff_factor * (2 ^ retry_count)
  # Example: 2.0 means 2s, 4s, 8s waits between retries
  backoff_factor: 2.0

# ============================================================================
# Database Configuration
# ============================================================================
database:
  # Path to the SQLite database file (relative to project root)
  # The directory will be created automatically if it doesn't exist
  path: "data/database/forum_data.sqlite"

# ============================================================================
# Checkpoint System Configuration
# ============================================================================
# Enables resumable data collection - if interrupted, you can continue where you left off
checkpoints:
  # Enable checkpoint system (recommended)
  enabled: true
  
  # Directory for checkpoint files (relative to project root)
  directory: "data/checkpoints"

# ============================================================================
# LLM Analysis Configuration (Optional)
# ============================================================================
# Only required if you want to use AI-powered analysis features:
# - forum-analyzer llm-analyze
# - forum-analyzer themes
# - forum-analyzer ask
#
# You can skip this section and still use basic collection and reporting features.
llm_analysis:
  # Your Anthropic API key
  # Get one at: https://console.anthropic.com
  # Leave empty if not using LLM features
  api_key: ""  # ⬅️ ADD YOUR API KEY HERE (e.g., "sk-ant-...")
  
  # Claude model to use for analysis
  # claude-opus-4-20250514: Most capable, best for detailed analysis (~$0.05 for this example)
  # claude-sonnet-4-20250514: Faster and cheaper, still high quality
  model: "claude-opus-4-20250514"
  
  # Number of posts to analyze in each batch
  # Higher = faster but more expensive API calls
  # Lower = slower but more granular progress tracking
  batch_size: 10
  
  # Maximum tokens for LLM responses
  # 4096 is sufficient for post analysis
  max_tokens: 4096
  
  # Temperature for LLM responses (0.0 = deterministic, 1.0 = creative)
  # Use 0.0 for consistent, reproducible analysis
  temperature: 0.0
  
  # Ask command settings (for natural language queries)
  ask:
    # Maximum number of context items to include in queries
    context_limit: 50
    
    # Whether to cache query results
    cache_queries: true

# ============================================================================
# Customization Notes
# ============================================================================
#
# To analyze a different Discourse forum:
# 1. Update 'base_url' to your forum's URL
# 2. Find the category you want to analyze by visiting it in a browser
# 3. Extract the category slug and ID from the URL
#    Example URL: https://discuss.example.com/c/support/12
#    - category_slug: "support"
#    - category_id: 12
# 4. Adjust rate_limiting if the forum has different API limits
#
# To analyze multiple categories:
# Currently, you need to run separate analyses with different config files.
# Copy this file and modify the category settings for each category you want to analyze.
#
# For forums that require authentication:
# The current version supports public forums only. Authentication support
# is planned for a future release.
#
# ============================================================================